<#
.Synopsis
    RunAs-NetOnly 2019
    Ben Turner @benpturner 
.DESCRIPTION
    Powershell Runas-NetOnly 
    This logon type is used by the LOGON32_PROVIDER_WINNT50 logon provider.
.EXAMPLE
    PS C:\> RunAs-NetOnly
.EXAMPLE
    PS C:\> RunAs-NetOnly "domain" "username" "password" "ls \\mydc\c$"
#>
$runasloaded = $null
function RunAs-NetOnly($domain, $username, $password, $command) {

    if ($runasloaded -ne "TRUE") {
        $script:runasloaded = "TRUE"
        $runasloaded = "TRUE"
        $ps = "
        echo "[+] Loading Assembly using System.Reflection"
        echo ""
        $dllbytes  = [System.Convert]::FromBase64String($ps)
        $assembly = [System.Reflection.Assembly]::Load($dllbytes)
    }

    $response = [RunAs.Program]::NetOnly(($domain, $username, $password, $command))
    echo $response

}
